# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: playcloud.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='playcloud.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0fplaycloud.proto\"C\n\x04\x46ile\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x16\n\x06strips\x18\x02 \x03(\x0b\x32\x06.Strip\x12\x15\n\roriginal_size\x18\x03 \x01(\x04\"l\n\x05Strip\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\x12\x10\n\x08\x63hecksum\x18\x03 \x01(\x0c\x12\x19\n\x04type\x18\x04 \x01(\x0e\x32\x0b.Strip.Type\"\x1c\n\x04Type\x12\x08\n\x04\x44\x41TA\x10\x00\x12\n\n\x06PARITY\x10\x01\"\x87\x01\n\rEncodeRequest\x12\x0f\n\x07payload\x18\x01 \x01(\x0c\x12\x32\n\nparameters\x18\x02 \x03(\x0b\x32\x1e.EncodeRequest.ParametersEntry\x1a\x31\n\x0fParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x87\x01\n\x0b\x45ncodeReply\x12\x13\n\x04\x66ile\x18\x01 \x01(\x0b\x32\x05.File\x12\x30\n\nparameters\x18\x02 \x03(\x0b\x32\x1c.EncodeReply.ParametersEntry\x1a\x31\n\x0fParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x9c\x01\n\rDecodeRequest\x12\x16\n\x06strips\x18\x01 \x03(\x0b\x32\x06.Strip\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\x32\n\nparameters\x18\x03 \x03(\x0b\x32\x1e.DecodeRequest.ParametersEntry\x1a\x31\n\x0fParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x85\x01\n\x0b\x44\x65\x63odeReply\x12\x11\n\tdec_block\x18\x01 \x01(\x0c\x12\x30\n\nparameters\x18\x02 \x03(\x0b\x32\x1c.DecodeReply.ParametersEntry\x1a\x31\n\x0fParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x1e\n\x0c\x42lockRequest\x12\x0e\n\x06\x62locks\x18\x01 \x01(\r\"$\n\nBlockReply\x12\x16\n\x06strips\x18\x01 \x03(\x0b\x32\x06.Strip\"P\n\x11NamedBlockRequest\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\r\n\x05index\x18\x02 \x01(\r\x12\x1e\n\x16reconstruct_if_missing\x18\x03 \x01(\x08\";\n\x12ReconstructRequest\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x17\n\x0fmissing_indices\x18\x02 \x03(\x05\"\x8d\x01\n\x10ReconstructReply\x12;\n\rreconstructed\x18\x01 \x03(\x0b\x32$.ReconstructReply.ReconstructedEntry\x1a<\n\x12ReconstructedEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\x15\n\x05value\x18\x02 \x01(\x0b\x32\x06.Strip:\x02\x38\x01\")\n\x16\x46ragmentsNeededRequest\x12\x0f\n\x07missing\x18\x01 \x03(\r\"&\n\x14\x46ragmentsNeededReply\x12\x0e\n\x06needed\x18\x01 \x03(\r2\xe2\x01\n\x0e\x45ncoderDecoder\x12(\n\x06\x45ncode\x12\x0e.EncodeRequest\x1a\x0c.EncodeReply\"\x00\x12(\n\x06\x44\x65\x63ode\x12\x0e.DecodeRequest\x1a\x0c.DecodeReply\"\x00\x12\x37\n\x0bReconstruct\x12\x13.ReconstructRequest\x1a\x11.ReconstructReply\"\x00\x12\x43\n\x0f\x46ragmentsNeeded\x12\x17.FragmentsNeededRequest\x1a\x15.FragmentsNeededReply\"\x00\x32\x62\n\x05Proxy\x12/\n\x0fGetRandomBlocks\x12\r.BlockRequest\x1a\x0b.BlockReply\"\x00\x12(\n\x08GetBlock\x12\x12.NamedBlockRequest\x1a\x06.Strip\"\x00\x42\x19\n\x17\x63h.unine.iiun.safecloudb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_STRIP_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='Strip.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DATA', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PARITY', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=168,
  serialized_end=196,
)
_sym_db.RegisterEnumDescriptor(_STRIP_TYPE)


_FILE = _descriptor.Descriptor(
  name='File',
  full_name='File',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='File.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='strips', full_name='File.strips', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='original_size', full_name='File.original_size', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19,
  serialized_end=86,
)


_STRIP = _descriptor.Descriptor(
  name='Strip',
  full_name='Strip',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Strip.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='Strip.data', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='checksum', full_name='Strip.checksum', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='Strip.type', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _STRIP_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=88,
  serialized_end=196,
)


_ENCODEREQUEST_PARAMETERSENTRY = _descriptor.Descriptor(
  name='ParametersEntry',
  full_name='EncodeRequest.ParametersEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='EncodeRequest.ParametersEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='EncodeRequest.ParametersEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=285,
  serialized_end=334,
)

_ENCODEREQUEST = _descriptor.Descriptor(
  name='EncodeRequest',
  full_name='EncodeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='payload', full_name='EncodeRequest.payload', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parameters', full_name='EncodeRequest.parameters', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ENCODEREQUEST_PARAMETERSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=199,
  serialized_end=334,
)


_ENCODEREPLY_PARAMETERSENTRY = _descriptor.Descriptor(
  name='ParametersEntry',
  full_name='EncodeReply.ParametersEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='EncodeReply.ParametersEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='EncodeReply.ParametersEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=285,
  serialized_end=334,
)

_ENCODEREPLY = _descriptor.Descriptor(
  name='EncodeReply',
  full_name='EncodeReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file', full_name='EncodeReply.file', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parameters', full_name='EncodeReply.parameters', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ENCODEREPLY_PARAMETERSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=337,
  serialized_end=472,
)


_DECODEREQUEST_PARAMETERSENTRY = _descriptor.Descriptor(
  name='ParametersEntry',
  full_name='DecodeRequest.ParametersEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='DecodeRequest.ParametersEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='DecodeRequest.ParametersEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=285,
  serialized_end=334,
)

_DECODEREQUEST = _descriptor.Descriptor(
  name='DecodeRequest',
  full_name='DecodeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='strips', full_name='DecodeRequest.strips', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='DecodeRequest.path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parameters', full_name='DecodeRequest.parameters', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_DECODEREQUEST_PARAMETERSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=475,
  serialized_end=631,
)


_DECODEREPLY_PARAMETERSENTRY = _descriptor.Descriptor(
  name='ParametersEntry',
  full_name='DecodeReply.ParametersEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='DecodeReply.ParametersEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='DecodeReply.ParametersEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=285,
  serialized_end=334,
)

_DECODEREPLY = _descriptor.Descriptor(
  name='DecodeReply',
  full_name='DecodeReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dec_block', full_name='DecodeReply.dec_block', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parameters', full_name='DecodeReply.parameters', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_DECODEREPLY_PARAMETERSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=634,
  serialized_end=767,
)


_BLOCKREQUEST = _descriptor.Descriptor(
  name='BlockRequest',
  full_name='BlockRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='blocks', full_name='BlockRequest.blocks', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=769,
  serialized_end=799,
)


_BLOCKREPLY = _descriptor.Descriptor(
  name='BlockReply',
  full_name='BlockReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='strips', full_name='BlockReply.strips', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=801,
  serialized_end=837,
)


_NAMEDBLOCKREQUEST = _descriptor.Descriptor(
  name='NamedBlockRequest',
  full_name='NamedBlockRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='NamedBlockRequest.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='index', full_name='NamedBlockRequest.index', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reconstruct_if_missing', full_name='NamedBlockRequest.reconstruct_if_missing', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=839,
  serialized_end=919,
)


_RECONSTRUCTREQUEST = _descriptor.Descriptor(
  name='ReconstructRequest',
  full_name='ReconstructRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='ReconstructRequest.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='missing_indices', full_name='ReconstructRequest.missing_indices', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=921,
  serialized_end=980,
)


_RECONSTRUCTREPLY_RECONSTRUCTEDENTRY = _descriptor.Descriptor(
  name='ReconstructedEntry',
  full_name='ReconstructReply.ReconstructedEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ReconstructReply.ReconstructedEntry.key', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='ReconstructReply.ReconstructedEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1064,
  serialized_end=1124,
)

_RECONSTRUCTREPLY = _descriptor.Descriptor(
  name='ReconstructReply',
  full_name='ReconstructReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reconstructed', full_name='ReconstructReply.reconstructed', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_RECONSTRUCTREPLY_RECONSTRUCTEDENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=983,
  serialized_end=1124,
)


_FRAGMENTSNEEDEDREQUEST = _descriptor.Descriptor(
  name='FragmentsNeededRequest',
  full_name='FragmentsNeededRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='missing', full_name='FragmentsNeededRequest.missing', index=0,
      number=1, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1126,
  serialized_end=1167,
)


_FRAGMENTSNEEDEDREPLY = _descriptor.Descriptor(
  name='FragmentsNeededReply',
  full_name='FragmentsNeededReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='needed', full_name='FragmentsNeededReply.needed', index=0,
      number=1, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1169,
  serialized_end=1207,
)

_FILE.fields_by_name['strips'].message_type = _STRIP
_STRIP.fields_by_name['type'].enum_type = _STRIP_TYPE
_STRIP_TYPE.containing_type = _STRIP
_ENCODEREQUEST_PARAMETERSENTRY.containing_type = _ENCODEREQUEST
_ENCODEREQUEST.fields_by_name['parameters'].message_type = _ENCODEREQUEST_PARAMETERSENTRY
_ENCODEREPLY_PARAMETERSENTRY.containing_type = _ENCODEREPLY
_ENCODEREPLY.fields_by_name['file'].message_type = _FILE
_ENCODEREPLY.fields_by_name['parameters'].message_type = _ENCODEREPLY_PARAMETERSENTRY
_DECODEREQUEST_PARAMETERSENTRY.containing_type = _DECODEREQUEST
_DECODEREQUEST.fields_by_name['strips'].message_type = _STRIP
_DECODEREQUEST.fields_by_name['parameters'].message_type = _DECODEREQUEST_PARAMETERSENTRY
_DECODEREPLY_PARAMETERSENTRY.containing_type = _DECODEREPLY
_DECODEREPLY.fields_by_name['parameters'].message_type = _DECODEREPLY_PARAMETERSENTRY
_BLOCKREPLY.fields_by_name['strips'].message_type = _STRIP
_RECONSTRUCTREPLY_RECONSTRUCTEDENTRY.fields_by_name['value'].message_type = _STRIP
_RECONSTRUCTREPLY_RECONSTRUCTEDENTRY.containing_type = _RECONSTRUCTREPLY
_RECONSTRUCTREPLY.fields_by_name['reconstructed'].message_type = _RECONSTRUCTREPLY_RECONSTRUCTEDENTRY
DESCRIPTOR.message_types_by_name['File'] = _FILE
DESCRIPTOR.message_types_by_name['Strip'] = _STRIP
DESCRIPTOR.message_types_by_name['EncodeRequest'] = _ENCODEREQUEST
DESCRIPTOR.message_types_by_name['EncodeReply'] = _ENCODEREPLY
DESCRIPTOR.message_types_by_name['DecodeRequest'] = _DECODEREQUEST
DESCRIPTOR.message_types_by_name['DecodeReply'] = _DECODEREPLY
DESCRIPTOR.message_types_by_name['BlockRequest'] = _BLOCKREQUEST
DESCRIPTOR.message_types_by_name['BlockReply'] = _BLOCKREPLY
DESCRIPTOR.message_types_by_name['NamedBlockRequest'] = _NAMEDBLOCKREQUEST
DESCRIPTOR.message_types_by_name['ReconstructRequest'] = _RECONSTRUCTREQUEST
DESCRIPTOR.message_types_by_name['ReconstructReply'] = _RECONSTRUCTREPLY
DESCRIPTOR.message_types_by_name['FragmentsNeededRequest'] = _FRAGMENTSNEEDEDREQUEST
DESCRIPTOR.message_types_by_name['FragmentsNeededReply'] = _FRAGMENTSNEEDEDREPLY

File = _reflection.GeneratedProtocolMessageType('File', (_message.Message,), dict(
  DESCRIPTOR = _FILE,
  __module__ = 'playcloud_pb2'
  # @@protoc_insertion_point(class_scope:File)
  ))
_sym_db.RegisterMessage(File)

Strip = _reflection.GeneratedProtocolMessageType('Strip', (_message.Message,), dict(
  DESCRIPTOR = _STRIP,
  __module__ = 'playcloud_pb2'
  # @@protoc_insertion_point(class_scope:Strip)
  ))
_sym_db.RegisterMessage(Strip)

EncodeRequest = _reflection.GeneratedProtocolMessageType('EncodeRequest', (_message.Message,), dict(

  ParametersEntry = _reflection.GeneratedProtocolMessageType('ParametersEntry', (_message.Message,), dict(
    DESCRIPTOR = _ENCODEREQUEST_PARAMETERSENTRY,
    __module__ = 'playcloud_pb2'
    # @@protoc_insertion_point(class_scope:EncodeRequest.ParametersEntry)
    ))
  ,
  DESCRIPTOR = _ENCODEREQUEST,
  __module__ = 'playcloud_pb2'
  # @@protoc_insertion_point(class_scope:EncodeRequest)
  ))
_sym_db.RegisterMessage(EncodeRequest)
_sym_db.RegisterMessage(EncodeRequest.ParametersEntry)

EncodeReply = _reflection.GeneratedProtocolMessageType('EncodeReply', (_message.Message,), dict(

  ParametersEntry = _reflection.GeneratedProtocolMessageType('ParametersEntry', (_message.Message,), dict(
    DESCRIPTOR = _ENCODEREPLY_PARAMETERSENTRY,
    __module__ = 'playcloud_pb2'
    # @@protoc_insertion_point(class_scope:EncodeReply.ParametersEntry)
    ))
  ,
  DESCRIPTOR = _ENCODEREPLY,
  __module__ = 'playcloud_pb2'
  # @@protoc_insertion_point(class_scope:EncodeReply)
  ))
_sym_db.RegisterMessage(EncodeReply)
_sym_db.RegisterMessage(EncodeReply.ParametersEntry)

DecodeRequest = _reflection.GeneratedProtocolMessageType('DecodeRequest', (_message.Message,), dict(

  ParametersEntry = _reflection.GeneratedProtocolMessageType('ParametersEntry', (_message.Message,), dict(
    DESCRIPTOR = _DECODEREQUEST_PARAMETERSENTRY,
    __module__ = 'playcloud_pb2'
    # @@protoc_insertion_point(class_scope:DecodeRequest.ParametersEntry)
    ))
  ,
  DESCRIPTOR = _DECODEREQUEST,
  __module__ = 'playcloud_pb2'
  # @@protoc_insertion_point(class_scope:DecodeRequest)
  ))
_sym_db.RegisterMessage(DecodeRequest)
_sym_db.RegisterMessage(DecodeRequest.ParametersEntry)

DecodeReply = _reflection.GeneratedProtocolMessageType('DecodeReply', (_message.Message,), dict(

  ParametersEntry = _reflection.GeneratedProtocolMessageType('ParametersEntry', (_message.Message,), dict(
    DESCRIPTOR = _DECODEREPLY_PARAMETERSENTRY,
    __module__ = 'playcloud_pb2'
    # @@protoc_insertion_point(class_scope:DecodeReply.ParametersEntry)
    ))
  ,
  DESCRIPTOR = _DECODEREPLY,
  __module__ = 'playcloud_pb2'
  # @@protoc_insertion_point(class_scope:DecodeReply)
  ))
_sym_db.RegisterMessage(DecodeReply)
_sym_db.RegisterMessage(DecodeReply.ParametersEntry)

BlockRequest = _reflection.GeneratedProtocolMessageType('BlockRequest', (_message.Message,), dict(
  DESCRIPTOR = _BLOCKREQUEST,
  __module__ = 'playcloud_pb2'
  # @@protoc_insertion_point(class_scope:BlockRequest)
  ))
_sym_db.RegisterMessage(BlockRequest)

BlockReply = _reflection.GeneratedProtocolMessageType('BlockReply', (_message.Message,), dict(
  DESCRIPTOR = _BLOCKREPLY,
  __module__ = 'playcloud_pb2'
  # @@protoc_insertion_point(class_scope:BlockReply)
  ))
_sym_db.RegisterMessage(BlockReply)

NamedBlockRequest = _reflection.GeneratedProtocolMessageType('NamedBlockRequest', (_message.Message,), dict(
  DESCRIPTOR = _NAMEDBLOCKREQUEST,
  __module__ = 'playcloud_pb2'
  # @@protoc_insertion_point(class_scope:NamedBlockRequest)
  ))
_sym_db.RegisterMessage(NamedBlockRequest)

ReconstructRequest = _reflection.GeneratedProtocolMessageType('ReconstructRequest', (_message.Message,), dict(
  DESCRIPTOR = _RECONSTRUCTREQUEST,
  __module__ = 'playcloud_pb2'
  # @@protoc_insertion_point(class_scope:ReconstructRequest)
  ))
_sym_db.RegisterMessage(ReconstructRequest)

ReconstructReply = _reflection.GeneratedProtocolMessageType('ReconstructReply', (_message.Message,), dict(

  ReconstructedEntry = _reflection.GeneratedProtocolMessageType('ReconstructedEntry', (_message.Message,), dict(
    DESCRIPTOR = _RECONSTRUCTREPLY_RECONSTRUCTEDENTRY,
    __module__ = 'playcloud_pb2'
    # @@protoc_insertion_point(class_scope:ReconstructReply.ReconstructedEntry)
    ))
  ,
  DESCRIPTOR = _RECONSTRUCTREPLY,
  __module__ = 'playcloud_pb2'
  # @@protoc_insertion_point(class_scope:ReconstructReply)
  ))
_sym_db.RegisterMessage(ReconstructReply)
_sym_db.RegisterMessage(ReconstructReply.ReconstructedEntry)

FragmentsNeededRequest = _reflection.GeneratedProtocolMessageType('FragmentsNeededRequest', (_message.Message,), dict(
  DESCRIPTOR = _FRAGMENTSNEEDEDREQUEST,
  __module__ = 'playcloud_pb2'
  # @@protoc_insertion_point(class_scope:FragmentsNeededRequest)
  ))
_sym_db.RegisterMessage(FragmentsNeededRequest)

FragmentsNeededReply = _reflection.GeneratedProtocolMessageType('FragmentsNeededReply', (_message.Message,), dict(
  DESCRIPTOR = _FRAGMENTSNEEDEDREPLY,
  __module__ = 'playcloud_pb2'
  # @@protoc_insertion_point(class_scope:FragmentsNeededReply)
  ))
_sym_db.RegisterMessage(FragmentsNeededReply)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\027ch.unine.iiun.safecloud'))
_ENCODEREQUEST_PARAMETERSENTRY.has_options = True
_ENCODEREQUEST_PARAMETERSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_ENCODEREPLY_PARAMETERSENTRY.has_options = True
_ENCODEREPLY_PARAMETERSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_DECODEREQUEST_PARAMETERSENTRY.has_options = True
_DECODEREQUEST_PARAMETERSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_DECODEREPLY_PARAMETERSENTRY.has_options = True
_DECODEREPLY_PARAMETERSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_RECONSTRUCTREPLY_RECONSTRUCTEDENTRY.has_options = True
_RECONSTRUCTREPLY_RECONSTRUCTEDENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class EncoderDecoderStub(object):
    """the encoder service
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Encode = channel.unary_unary(
          '/EncoderDecoder/Encode',
          request_serializer=EncodeRequest.SerializeToString,
          response_deserializer=EncodeReply.FromString,
          )
      self.Decode = channel.unary_unary(
          '/EncoderDecoder/Decode',
          request_serializer=DecodeRequest.SerializeToString,
          response_deserializer=DecodeReply.FromString,
          )
      self.Reconstruct = channel.unary_unary(
          '/EncoderDecoder/Reconstruct',
          request_serializer=ReconstructRequest.SerializeToString,
          response_deserializer=ReconstructReply.FromString,
          )
      self.FragmentsNeeded = channel.unary_unary(
          '/EncoderDecoder/FragmentsNeeded',
          request_serializer=FragmentsNeededRequest.SerializeToString,
          response_deserializer=FragmentsNeededReply.FromString,
          )


  class EncoderDecoderServicer(object):
    """the encoder service
    """

    def Encode(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Decode(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Reconstruct(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def FragmentsNeeded(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_EncoderDecoderServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Encode': grpc.unary_unary_rpc_method_handler(
            servicer.Encode,
            request_deserializer=EncodeRequest.FromString,
            response_serializer=EncodeReply.SerializeToString,
        ),
        'Decode': grpc.unary_unary_rpc_method_handler(
            servicer.Decode,
            request_deserializer=DecodeRequest.FromString,
            response_serializer=DecodeReply.SerializeToString,
        ),
        'Reconstruct': grpc.unary_unary_rpc_method_handler(
            servicer.Reconstruct,
            request_deserializer=ReconstructRequest.FromString,
            response_serializer=ReconstructReply.SerializeToString,
        ),
        'FragmentsNeeded': grpc.unary_unary_rpc_method_handler(
            servicer.FragmentsNeeded,
            request_deserializer=FragmentsNeededRequest.FromString,
            response_serializer=FragmentsNeededReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'EncoderDecoder', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class ProxyStub(object):
    """the proxy service
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetRandomBlocks = channel.unary_unary(
          '/Proxy/GetRandomBlocks',
          request_serializer=BlockRequest.SerializeToString,
          response_deserializer=BlockReply.FromString,
          )
      self.GetBlock = channel.unary_unary(
          '/Proxy/GetBlock',
          request_serializer=NamedBlockRequest.SerializeToString,
          response_deserializer=Strip.FromString,
          )


  class ProxyServicer(object):
    """the proxy service
    """

    def GetRandomBlocks(self, request, context):
      """Returns at most n random blocks where n is a parameter of the function
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetBlock(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ProxyServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetRandomBlocks': grpc.unary_unary_rpc_method_handler(
            servicer.GetRandomBlocks,
            request_deserializer=BlockRequest.FromString,
            response_serializer=BlockReply.SerializeToString,
        ),
        'GetBlock': grpc.unary_unary_rpc_method_handler(
            servicer.GetBlock,
            request_deserializer=NamedBlockRequest.FromString,
            response_serializer=Strip.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'Proxy', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaEncoderDecoderServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """the encoder service
    """
    def Encode(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Decode(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Reconstruct(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def FragmentsNeeded(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaEncoderDecoderStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """the encoder service
    """
    def Encode(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Encode.future = None
    def Decode(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Decode.future = None
    def Reconstruct(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Reconstruct.future = None
    def FragmentsNeeded(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    FragmentsNeeded.future = None


  def beta_create_EncoderDecoder_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('EncoderDecoder', 'Decode'): DecodeRequest.FromString,
      ('EncoderDecoder', 'Encode'): EncodeRequest.FromString,
      ('EncoderDecoder', 'FragmentsNeeded'): FragmentsNeededRequest.FromString,
      ('EncoderDecoder', 'Reconstruct'): ReconstructRequest.FromString,
    }
    response_serializers = {
      ('EncoderDecoder', 'Decode'): DecodeReply.SerializeToString,
      ('EncoderDecoder', 'Encode'): EncodeReply.SerializeToString,
      ('EncoderDecoder', 'FragmentsNeeded'): FragmentsNeededReply.SerializeToString,
      ('EncoderDecoder', 'Reconstruct'): ReconstructReply.SerializeToString,
    }
    method_implementations = {
      ('EncoderDecoder', 'Decode'): face_utilities.unary_unary_inline(servicer.Decode),
      ('EncoderDecoder', 'Encode'): face_utilities.unary_unary_inline(servicer.Encode),
      ('EncoderDecoder', 'FragmentsNeeded'): face_utilities.unary_unary_inline(servicer.FragmentsNeeded),
      ('EncoderDecoder', 'Reconstruct'): face_utilities.unary_unary_inline(servicer.Reconstruct),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_EncoderDecoder_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('EncoderDecoder', 'Decode'): DecodeRequest.SerializeToString,
      ('EncoderDecoder', 'Encode'): EncodeRequest.SerializeToString,
      ('EncoderDecoder', 'FragmentsNeeded'): FragmentsNeededRequest.SerializeToString,
      ('EncoderDecoder', 'Reconstruct'): ReconstructRequest.SerializeToString,
    }
    response_deserializers = {
      ('EncoderDecoder', 'Decode'): DecodeReply.FromString,
      ('EncoderDecoder', 'Encode'): EncodeReply.FromString,
      ('EncoderDecoder', 'FragmentsNeeded'): FragmentsNeededReply.FromString,
      ('EncoderDecoder', 'Reconstruct'): ReconstructReply.FromString,
    }
    cardinalities = {
      'Decode': cardinality.Cardinality.UNARY_UNARY,
      'Encode': cardinality.Cardinality.UNARY_UNARY,
      'FragmentsNeeded': cardinality.Cardinality.UNARY_UNARY,
      'Reconstruct': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'EncoderDecoder', cardinalities, options=stub_options)


  class BetaProxyServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """the proxy service
    """
    def GetRandomBlocks(self, request, context):
      """Returns at most n random blocks where n is a parameter of the function
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetBlock(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaProxyStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """the proxy service
    """
    def GetRandomBlocks(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Returns at most n random blocks where n is a parameter of the function
      """
      raise NotImplementedError()
    GetRandomBlocks.future = None
    def GetBlock(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    GetBlock.future = None


  def beta_create_Proxy_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('Proxy', 'GetBlock'): NamedBlockRequest.FromString,
      ('Proxy', 'GetRandomBlocks'): BlockRequest.FromString,
    }
    response_serializers = {
      ('Proxy', 'GetBlock'): Strip.SerializeToString,
      ('Proxy', 'GetRandomBlocks'): BlockReply.SerializeToString,
    }
    method_implementations = {
      ('Proxy', 'GetBlock'): face_utilities.unary_unary_inline(servicer.GetBlock),
      ('Proxy', 'GetRandomBlocks'): face_utilities.unary_unary_inline(servicer.GetRandomBlocks),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Proxy_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('Proxy', 'GetBlock'): NamedBlockRequest.SerializeToString,
      ('Proxy', 'GetRandomBlocks'): BlockRequest.SerializeToString,
    }
    response_deserializers = {
      ('Proxy', 'GetBlock'): Strip.FromString,
      ('Proxy', 'GetRandomBlocks'): BlockReply.FromString,
    }
    cardinalities = {
      'GetBlock': cardinality.Cardinality.UNARY_UNARY,
      'GetRandomBlocks': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'Proxy', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
