# Generated by configure.py on 2017-09-22T16:45:06.076577
---
version: "3"
services:
    proxy:
        build: ./pyproxy
        ports:
          - "3000:8000"
        env_file:
          - ./erasure.env
        deploy:
            mode: replicated
            placement:
                constraints: [node.role == manager]

    coder:
        build: ./pyproxy
        entrypoint: python /usr/local/src/pyproxy/coder.py
        env_file:
          - ./erasure.env
        deploy:
            mode: replicated
            placement:
                constraints: [node.role == manager]

    zoo1:
        image: zookeeper
        restart: always
        ports:
          - 2181:2181
        environment:
          - ZOO_MY_ID=1
        deploy:
            mode: replicated
            placement:
                constraints: [node.role == manager]

    metadata:
        image: redis:3.2.8
        command: redis-server --appendonly yes
        deploy:
            mode: replicated
            placement:
                constraints: [node.role == manager]
        volumes:
          - ./volumes/metadata/:/data/

    redis1:
        image: redis:3.2.8
        deploy:
            placement:
                constraints:
                  - node.role == worker
        command: redis-server --appendonly yes
        volumes:
          - ./volumes/redis1/:/data/
        container_name: redis1
    redis2:
        image: redis:3.2.8
        deploy:
            placement:
                constraints:
                  - node.role == worker
        command: redis-server --appendonly yes
        volumes:
          - ./volumes/redis2/:/data/
        container_name: redis2
    redis3:
        image: redis:3.2.8
        deploy:
            placement:
                constraints:
                  - node.role == worker
        command: redis-server --appendonly yes
        volumes:
          - ./volumes/redis3/:/data/
        container_name: redis3
    redis4:
        image: redis:3.2.8
        deploy:
            placement:
                constraints:
                  - node.role == worker
        command: redis-server --appendonly yes
        volumes:
          - ./volumes/redis4/:/data/
        container_name: redis4
    redis5:
        image: redis:3.2.8
        deploy:
            placement:
                constraints:
                  - node.role == worker
        command: redis-server --appendonly yes
        volumes:
          - ./volumes/redis5/:/data/
        container_name: redis5
    redis6:
        image: redis:3.2.8
        deploy:
            placement:
                constraints:
                  - node.role == worker
        command: redis-server --appendonly yes
        volumes:
          - ./volumes/redis6/:/data/
        container_name: redis6
    redis7:
        image: redis:3.2.8
        deploy:
            placement:
                constraints:
                  - node.role == worker
        command: redis-server --appendonly yes
        volumes:
          - ./volumes/redis7/:/data/
        container_name: redis7
    redis8:
        image: redis:3.2.8
        deploy:
            placement:
                constraints:
                  - node.role == worker
        command: redis-server --appendonly yes
        volumes:
          - ./volumes/redis8/:/data/
        container_name: redis8
    redis9:
        image: redis:3.2.8
        deploy:
            placement:
                constraints:
                  - node.role == worker
        command: redis-server --appendonly yes
        volumes:
          - ./volumes/redis9/:/data/
        container_name: redis9
    redis10:
        image: redis:3.2.8
        deploy:
            placement:
                constraints:
                  - node.role == worker
        command: redis-server --appendonly yes
        volumes:
          - ./volumes/redis10/:/data/
        container_name: redis10
